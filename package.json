{
  "name": "memoripilot",
  "displayName": "MemoriPilot",
  "description": "Project memory for Copilot - Supercharge Copilot with persistent context awareness that remembers decisions, tracks progress, and provides consistent project knowledge",
  "version": "0.3.1",
  "publisher": "gujjar19",
  "author": {
    "name": "Asad Hayat"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Deltaidiots/memoripilot"
  },
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Other",
    "Snippets",
    "Education",
    "Formatters"
  ],
  "keywords": [
    "copilot",
    "memory",
    "context",
    "ai",
    "productivity",
    "assistant",
    "knowledge-management",
    "documentation",
    "context-awareness",
    "persistent-memory",
    "decision-log",
    "project-memory",
    "chat",
    "gpt",
    "memoripilot",
    "project-context"
  ],
  "icon": "resources/memoripilot-icon.png",
  "activationEvents": [
    "onChat:memory",
    "onLanguageModelTool:memory_bank_update_context",
    "onLanguageModelTool:memory_bank_log_decision",
    "onLanguageModelTool:memory_bank_update_progress",
    "onLanguageModelTool:memory_bank_show_memory",
    "onLanguageModelTool:memory_bank_switch_mode",
    "onLanguageModelTool:memory_bank_update_product_context",
    "onLanguageModelTool:memory_bank_update_system_patterns",
    "onLanguageModelTool:memory_bank_update_project_brief",
    "onLanguageModelTool:memory_bank_update_architect",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "memory-bank-view",
          "name": "Memory Bank",
          "icon": "resources/dark/memory.svg"
        }
      ]
    },
    "languageModelTools": [
      {
        "name": "memory_bank_update_context",
        "displayName": "Update Active Context",
        "toolReferenceName": "updateContext",
        "modelDescription": "Updates the active context file with the current working focus. Use this when the user wants to set their current task, goal, or area of focus. This helps maintain continuity across coding sessions.",
        "userDescription": "Set your current working focus in the memory bank",
        "canBeReferencedInPrompt": true,
        "icon": "$(target)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "string",
              "description": "The current context or focus area to set"
            }
          },
          "required": [
            "context"
          ]
        }
      },
      {
        "name": "memory_bank_log_decision",
        "displayName": "Log Decision",
        "toolReferenceName": "logDecision",
        "modelDescription": "Logs an important architectural or implementation decision to the decision log. Use this when the user makes or mentions a significant choice about technology, architecture, or implementation approach.",
        "userDescription": "Log an important decision to the memory bank",
        "canBeReferencedInPrompt": true,
        "icon": "$(checklist)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "decision": {
              "type": "string",
              "description": "The decision that was made"
            },
            "rationale": {
              "type": "string",
              "description": "The reasoning behind the decision"
            }
          },
          "required": [
            "decision"
          ]
        }
      },
      {
        "name": "memory_bank_update_progress",
        "displayName": "Update Progress",
        "toolReferenceName": "updateProgress",
        "modelDescription": "Updates the progress tracking with done, doing, and next items. Use this when the user mentions completing tasks, starting new work, or planning upcoming activities.",
        "userDescription": "Update your project progress tracking",
        "canBeReferencedInPrompt": true,
        "icon": "$(list-unordered)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "done": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tasks that have been completed"
            },
            "doing": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tasks currently in progress"
            },
            "next": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tasks planned for the future"
            }
          }
        }
      },
      {
        "name": "memory_bank_show_memory",
        "displayName": "Show Memory",
        "toolReferenceName": "showMemory",
        "modelDescription": "Displays the content of a specific memory bank file. Use this when the user wants to see what's currently stored in their project memory files.",
        "userDescription": "Show content from a memory bank file",
        "canBeReferencedInPrompt": true,
        "icon": "$(book)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "fileName": {
              "type": "string",
              "enum": [
                "activeContext.md",
                "productContext.md",
                "progress.md",
                "decisionLog.md",
                "projectBrief.md",
                "systemPatterns.md"
              ],
              "description": "The memory bank file to display"
            }
          },
          "required": [
            "fileName"
          ]
        }
      },
      {
        "name": "memory_bank_update_all_disabled",
        "displayName": "Update Memory Bank (Disabled)",
        "toolReferenceName": "updateMemoryBank",
        "modelDescription": "This tool has been temporarily disabled as it's not ready yet.",
        "userDescription": "This tool is currently disabled",
        "canBeReferencedInPrompt": false,
        "icon": "$(sync)",
        "inputSchema": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "memory_bank_switch_mode",
        "displayName": "Switch Mode",
        "toolReferenceName": "switchMode",
        "modelDescription": "Switches the memory bank working mode between Architect (design), Code (implementation), Ask (questions), and Debug (troubleshooting). Different modes provide access to different memory files.",
        "userDescription": "Switch memory bank working mode",
        "canBeReferencedInPrompt": true,
        "icon": "$(gear)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "architect",
                "code",
                "ask",
                "debug"
              ],
              "description": "The working mode to switch to"
            }
          },
          "required": [
            "mode"
          ]
        }
      },
      {
        "name": "memory_bank_update_product_context",
        "displayName": "Update Product Context",
        "toolReferenceName": "updateProductContext",
        "modelDescription": "Updates the product context file with detailed information about the project's architecture, technologies, and libraries. Use this when significant project details or dependencies change.",
        "userDescription": "Update product context with project details",
        "canBeReferencedInPrompt": true,
        "icon": "$(package)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "A description of what the project does"
            },
            "architecture": {
              "type": "string",
              "description": "Description of the project's architecture"
            },
            "technologies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of technologies used in the project"
            },
            "libraries": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of libraries and dependencies used in the project"
            }
          }
        }
      },
      {
        "name": "memory_bank_update_system_patterns",
        "displayName": "Update System Patterns",
        "toolReferenceName": "updateSystemPatterns",
        "modelDescription": "Updates the system patterns file with architectural patterns, design patterns, and coding conventions identified in the project. Use this when new patterns emerge or existing ones evolve.",
        "userDescription": "Document system patterns and conventions",
        "canBeReferencedInPrompt": true,
        "icon": "$(symbol-structure)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "pattern": {
              "type": "string",
              "description": "The name of the pattern or convention"
            },
            "description": {
              "type": "string",
              "description": "Detailed explanation of the pattern and its purpose"
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Examples of where the pattern is used in the codebase"
            }
          },
          "required": [
            "pattern",
            "description"
          ]
        }
      },
      {
        "name": "memory_bank_update_project_brief",
        "displayName": "Update Project Brief",
        "toolReferenceName": "updateProjectBrief",
        "modelDescription": "Updates the project brief with high-level information about the project's purpose, goals, and constraints. Use this when project scope or objectives change.",
        "userDescription": "Update the high-level project brief",
        "canBeReferencedInPrompt": true,
        "icon": "$(project)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title of the project"
            },
            "summary": {
              "type": "string",
              "description": "A brief summary of what the project does"
            },
            "goals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The main goals of the project"
            },
            "constraints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Any constraints or limitations of the project"
            },
            "stakeholders": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "People or groups interested in the project"
            }
          }
        }
      },
      {
        "name": "memory_bank_update_architect",
        "displayName": "Update Architect Document",
        "toolReferenceName": "updateArchitect",
        "modelDescription": "Updates the architect document with architectural decisions, considerations, and component designs. Use this when making significant architectural changes.",
        "userDescription": "Document architectural decisions and component designs",
        "canBeReferencedInPrompt": true,
        "icon": "$(debug-stackframe-dot)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "decisions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Architectural decisions made"
            },
            "considerations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Important design considerations"
            },
            "components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Component name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Component description"
                  },
                  "responsibilities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Component responsibilities"
                  }
                },
                "required": ["name", "description"]
              },
              "description": "Components in the system architecture"
            }
          }
        }
      }
    ],
    "chatParticipants": [
      {
        "id": "memory-bank",
        "name": "memory",
        "fullName": "Memory Bank",
        "description": "GitHub Copilot with project memory"
      }
    ],
    "keybindings": [
      {
        "command": "memoryBank.processCommand",
        "key": "ctrl+alt+m",
        "mac": "cmd+alt+m",
        "when": "editorTextFocus || viewFocus"
      }
    ],
    "commands": [
      {
        "command": "memoryBank.test",
        "title": "Memory Bank: Test Activation"
      },
      {
        "command": "memoryBank.selectMode",
        "title": "Memory Bank: Select Mode"
      },
      {
        "command": "memoryBank.processCommand",
        "title": "Memory Bank: Run Command"
      },
      {
        "command": "memoryBank.refreshTemplates",
        "title": "Memory Bank: Refresh Chat Mode Templates"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "node ./out/test/suite/index.js",
    "test:unit": "npm run compile-tests && node ./out/test/suite/tools.test.js",
    "test:extension": "npm run compile-tests && node ./out/test/suite/extension.test.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "glob": "^11.0.3",
    "mocha": "^11.7.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  }
}
